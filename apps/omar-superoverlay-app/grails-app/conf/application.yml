---
configMsg: "Served by omar-config-server for omar-superoverlay-app"

environments:
  production:
    dataSource:
      pooled: true
      jmxExport: true
      driverClassName: org.postgresql.Driver
      dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect
      url: jdbc:postgres://localhost:5432/omar_db
      username: postgres
      password: password

omar:
  o2:
    baseUrl: ${serverProtocol}://${serverName}
  superOverlay:
    # This is the GetMap endpoint for the WMS Request.
    wmsUrl: ${serverProtocol}://${serverName}/omar-wms/wms/getMap
  tlv:
    baseUrl: ${serverProtocol}://${serverName}/tlv
  wfs:
    baseUrl: ${serverProtocol}://${serverName}/omar-wfs
  wms:
    baseUrl: ${serverProtocol}://${serverName}/omar-wms



# Set the context path for the application.
#server:
#  contextPath: /omar-superoverlay

---
grails:
    cors:
      enabled: true
    resources:
        pattern: '/**'
    profile: web
    codegen:
        defaultPackage: omar.superoverlay
    spring:
        transactionManagement:
            proxies: false
    gorm:
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
  enabled: true
  health:
    enabled: true
  actuator:
    sensitive: false
  beans:
    sensitive: false
  metrics:
    sensitive: false
  configprops:
    sensitive: false
  trace:
    sensitive: false
  mappings:
    sensitive: false
  env:
    sensitive: false
---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
endpoints:
    jmx:
        unique-names: true

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false
dataSource:
    # This is defined above
    #pooled: true
    # This is defined above
    #jmxExport: true
    # This is defined above
    #driverClassName: org.h2.Driver
    # This is defined above
    #username: sa
    # This is defined above
    #password: ''

environments:
    development:
        dataSource:
            dbCreate: create-drop
            url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    test:
        dataSource:
            dbCreate: update
            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    production:
        dataSource:
            dbCreate: update
            # This is defined above
            #url: jdbc:h2:./prodDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
logging:
  config: classpath:logback.groovy
---
# Define the http protocols that swagger will use
swagger:
  schemes:
    - HTTPS
    - HTTP

